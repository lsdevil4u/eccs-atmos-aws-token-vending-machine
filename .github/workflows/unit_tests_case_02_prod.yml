# This is a basic workflow to help you get started with Actions

name: unit_tests_case_02_production

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  unit_tests_case_02_production:
    # The type of runner that the job will run on
    #runs-on: [self-hosted, eccsdevops-aws-dev]
    runs-on: ['atmos-aws-arc-runner-set']
    container:
      #image: alpine:latest
      image: sanofi-docker-atmos-local.jfrog.io/furno_devops_v03:latest
      credentials:
      # the artifactory user name is the complete email address of the user in lowercase, example: gitlab-automation@sanofi.com
        username: ${{ secrets.DOCKER_USER}}
      # the artifactory token is obtained from the artifactory user's profile page and is used as-is (ie. no base64 encoding)
        password: ${{ secrets.DOCKER_TOKEN}}
      volumes:
        - /var/run/secrets/eks.amazonaws.com/serviceaccount/token:/var/run/secrets/eks.amazonaws.com/serviceaccount/token
    env:
      TF_VAR_ADMINKEY: ${{ secrets.TF_VAR_ADMINKEY}}
      TF_VAR_IAM_ENTITYID: ${{ secrets.IAM_ENTITY}}
      TF_VAR_IAM_WILDCARDENTITYID: ${{ secrets.IAM_WILDCARDENTITY}}
      AWS_WEB_IDENTITY_TOKEN_FILE: ${{ secrets.SHARED_GHRUNNER_AWS_WEB_IDENTITY_TOKEN_FILE }}
      AWS_ROLE_ARN: ${{ secrets.SHARED_GHRUNNER_AWS_ROLE_ARN }}
    

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Assume the aws role and set up the credentials for awscli/terraform
      - name: token vending machine unit test
        run: |
          aws lambda invoke --function-name arn:aws:lambda:eu-west-1:095208641432:function:App_RoleRetriever --payload '{"action": "getrole", "token": "${{ secrets.IAM_TESTCASE02_TOKEN}}", "role": "arn:aws:iam::230559371484:role/App_AppAdminRunnerTVM", "externalid": "${{ secrets.IAM_TESTCASE02_EXTERNALID}}"}' --region eu-west-1 response.json
          export AWS_ACCESS_KEY_ID=$(cat response.json | jq -r . | jq .AccessKeyId | xargs)
          export AWS_SECRET_ACCESS_KEY=$(cat response.json | jq -r . | jq .SecretAccessKey | xargs)
          export AWS_SESSION_TOKEN=$(cat response.json | jq -r . | jq .SessionToken | xargs)
          export AWS_EXPIRATION=$(cat response.json | jq -r . | jq .Expiration | xargs)
          export AWS_REGION='eu-west-1'
          aws s3api list-buckets --query "Buckets[].Name" --region eu-west-1