# This is a basic workflow to help you get started with Actions

name: destroy-lru_poc

# Controls when the workflow will run
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  destroy_lru_poc:
    # The type of runner that the job will run on
    #runs-on: [self-hosted, eccsdevops-aws-dev]
    runs-on: [self-hosted, aws-devops-dev]
    container:
        #image: alpine:latest
        image: sanofi-docker-atmos-local.jfrog.io/furno_devops_v02:latest
        credentials:
        # the artifactory user name is the complete email address of the user in lowercase, example: gitlab-automation@sanofi.com
          username: ${{ secrets.DOCKER_USER}}
        # the artifactory token is obtained from the artifactory user's profile page and is used as-is (ie. no base64 encoding)
          password: ${{ secrets.DOCKER_TOKEN}}
    env:
      HTTP_PROXY: 'emea-aws-webproxy.service.cloud.local:3128'
      HTTPS_PROXY: 'emea-aws-webproxy.service.cloud.local:3128'
      NO_PROXY: 'emea-aws-gitlab.sanofi.com,cloud.local,sanofi.com,docker'
      DESTROYPLAN: 'destroy.plan'
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Assume the aws role and set up the credentials for awscli/terraform
      - name: assume role and run terraform plan
        run: |
          chmod +x ./assume_role.sh
          . ./assume_role.sh "nfurno-devops-test" "CE_AppAdminRunner"
          cd least-rights-runner-deployment
          terraform init
          terraform validate
          terraform show
          terraform plan -destroy -out $DESTROYPLAN
          terraform apply -auto-approve $DESTROYPLAN
          
